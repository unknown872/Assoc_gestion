// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using appli_gest_assoc.Models;

namespace appli_gest_assoc.Migrations
{
    [DbContext(typeof(gest_assoc_dbContext))]
    [Migration("20221207170647_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "French_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("appli_gest_assoc.Models.Activite", b =>
                {
                    b.Property<int>("IdActivite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_activite")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("libelle");

                    b.HasKey("IdActivite");

                    b.ToTable("activites");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.Association", b =>
                {
                    b.Property<int>("IdAssociation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_association")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("adresse");

                    b.Property<DateTime>("AnneeCreation")
                        .HasColumnType("datetime")
                        .HasColumnName("annee_creation");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("NomAssociation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nom_association");

                    b.Property<string>("Tel1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tel1");

                    b.Property<string>("Tel2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tel2");

                    b.HasKey("IdAssociation");

                    b.ToTable("associations");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.Bureau", b =>
                {
                    b.Property<int>("IdBureau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_bureau")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActiviteId")
                        .HasColumnType("int")
                        .HasColumnName("activite_id");

                    b.Property<int>("AssociationId")
                        .HasColumnType("int")
                        .HasColumnName("association_id");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime")
                        .HasColumnName("date_creation");

                    b.Property<string>("NomBureau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nom_bureau");

                    b.HasKey("IdBureau");

                    b.HasIndex("ActiviteId");

                    b.HasIndex("AssociationId");

                    b.HasIndex(new[] { "NomBureau" }, "Bureau_unique")
                        .IsUnique();

                    b.ToTable("bureau");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.Depense", b =>
                {
                    b.Property<int>("IdDepense")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_depense")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BureauId")
                        .HasColumnType("int")
                        .HasColumnName("bureau_id");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("libelle");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("montant");

                    b.Property<int>("TypeDepenseId")
                        .HasColumnType("int")
                        .HasColumnName("type_depense_id");

                    b.HasKey("IdDepense");

                    b.HasIndex("BureauId");

                    b.HasIndex("TypeDepenseId");

                    b.ToTable("depenses");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.Membre", b =>
                {
                    b.Property<int>("IdMembre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_membre")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("adresse");

                    b.Property<DateTime>("DateNaiss")
                        .HasColumnType("datetime")
                        .HasColumnName("date_naiss");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("LieuNaiss")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lieu_naiss");

                    b.Property<string>("NomMembre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nom_membre");

                    b.Property<string>("PrenomMembre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("prenom_membre");

                    b.Property<string>("Sexe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sexe");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("tel");

                    b.HasKey("IdMembre");

                    b.ToTable("membres");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.MembreBureau", b =>
                {
                    b.Property<int>("IdMembreBureau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_membre_bureau")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BureauId")
                        .HasColumnType("int")
                        .HasColumnName("bureau_id");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime")
                        .HasColumnName("date_creation");

                    b.Property<int>("MembreId")
                        .HasColumnType("int")
                        .HasColumnName("membre_id");

                    b.Property<string>("Poste")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("poste");

                    b.HasKey("IdMembreBureau");

                    b.HasIndex("BureauId");

                    b.HasIndex("MembreId");

                    b.ToTable("membre_bureau");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.Recette", b =>
                {
                    b.Property<int>("IdRecette")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_recette")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BureauId")
                        .HasColumnType("int")
                        .HasColumnName("bureau_id");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("libelle");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("montant");

                    b.Property<int>("TypeRecetteId")
                        .HasColumnType("int")
                        .HasColumnName("type_recette_id");

                    b.HasKey("IdRecette");

                    b.HasIndex("BureauId");

                    b.HasIndex("TypeRecetteId");

                    b.ToTable("recettes");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.TypeDepense", b =>
                {
                    b.Property<int>("IdTypeDepense")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_type_depense")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("libelle");

                    b.HasKey("IdTypeDepense");

                    b.ToTable("type_depense");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.TypeRecette", b =>
                {
                    b.Property<int>("IdTypeRecette")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_type_recette")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("libelle");

                    b.HasKey("IdTypeRecette");

                    b.ToTable("type_recette");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.Bureau", b =>
                {
                    b.HasOne("appli_gest_assoc.Models.Activite", "Activite")
                        .WithMany("Bureaus")
                        .HasForeignKey("ActiviteId")
                        .HasConstraintName("FK_bureau_activites")
                        .IsRequired();

                    b.HasOne("appli_gest_assoc.Models.Association", "Association")
                        .WithMany("Bureaus")
                        .HasForeignKey("AssociationId")
                        .HasConstraintName("FK_bureau_associations")
                        .IsRequired();

                    b.Navigation("Activite");

                    b.Navigation("Association");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.Depense", b =>
                {
                    b.HasOne("appli_gest_assoc.Models.Bureau", "Bureau")
                        .WithMany("Depenses")
                        .HasForeignKey("BureauId")
                        .HasConstraintName("FK_depenses_bureau")
                        .IsRequired();

                    b.HasOne("appli_gest_assoc.Models.TypeDepense", "TypeDepense")
                        .WithMany("Depenses")
                        .HasForeignKey("TypeDepenseId")
                        .HasConstraintName("FK_depenses_type_depense")
                        .IsRequired();

                    b.Navigation("Bureau");

                    b.Navigation("TypeDepense");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.MembreBureau", b =>
                {
                    b.HasOne("appli_gest_assoc.Models.Bureau", "Bureau")
                        .WithMany("MembreBureaus")
                        .HasForeignKey("BureauId")
                        .HasConstraintName("FK_membre_bureau_bureau")
                        .IsRequired();

                    b.HasOne("appli_gest_assoc.Models.Membre", "Membre")
                        .WithMany("MembreBureaus")
                        .HasForeignKey("MembreId")
                        .HasConstraintName("FK_membre_bureau_membre")
                        .IsRequired();

                    b.Navigation("Bureau");

                    b.Navigation("Membre");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.Recette", b =>
                {
                    b.HasOne("appli_gest_assoc.Models.Bureau", "Bureau")
                        .WithMany("Recettes")
                        .HasForeignKey("BureauId")
                        .HasConstraintName("FK_recettes_bureau")
                        .IsRequired();

                    b.HasOne("appli_gest_assoc.Models.TypeRecette", "TypeRecette")
                        .WithMany("Recettes")
                        .HasForeignKey("TypeRecetteId")
                        .HasConstraintName("FK_recettes_type_recette")
                        .IsRequired();

                    b.Navigation("Bureau");

                    b.Navigation("TypeRecette");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.Activite", b =>
                {
                    b.Navigation("Bureaus");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.Association", b =>
                {
                    b.Navigation("Bureaus");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.Bureau", b =>
                {
                    b.Navigation("Depenses");

                    b.Navigation("MembreBureaus");

                    b.Navigation("Recettes");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.Membre", b =>
                {
                    b.Navigation("MembreBureaus");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.TypeDepense", b =>
                {
                    b.Navigation("Depenses");
                });

            modelBuilder.Entity("appli_gest_assoc.Models.TypeRecette", b =>
                {
                    b.Navigation("Recettes");
                });
#pragma warning restore 612, 618
        }
    }
}
